flour = require 'flour'
{spawn} = require 'child_process'

task 'build:coffee', ->
  compile 'src/*.coffee', 'lib/'
  compile 'tests/*.coffee', 'lib/'
  compile 'tests/includes/*.coffee', 'lib/'

task 'build', ->
  invoke 'build:coffee'

task 'examples', ->
  coffee = spawn "coffee", ["./exampless/commandrouter.coffee"]
  coffee.stdout.on 'data', (data) ->
    process.stdout.write data
  watch ['src','examples'], -> invoke 'examples',
    
task 'spec', (args) ->
  header()
  invoke 'build'
  
  if args.arguments[0]=='dbg'
    jasmine = spawn "node", ["--debug-brk","../node_modules/jasmine-node/lib/jasmine-node/cli.js", "--coffee", "tests"]
  else
    jasmine = spawn "node", ["../node_modules/jasmine-node/lib/jasmine-node/cli.js", "--coffee", "tests"]
    # jasmine = spawn "node", ["../node_modules/jasmine-node/lib/jasmine-node/cli.js", "--coffee", "--verbose", "tests"]

  jasmine.stdout.on "data", (data) ->
    process.stdout.write data
  jasmine.stderr.on "data", (data) ->
    process.stderr.write data

  jasmine.stdin.end()

task 'auto', ->
  flour.minifiers['js'] = null
  invoke 'spec'
  watch ['src','tests'], -> invoke 'spec'

task 'dbg', ->
  flour.minifiers['js'] = null
  invoke 'spec'
  watch ['src','tests'], -> invoke 'spec',

task 'run', ->
  invoke 'examples'
  watch ['src','examples'], -> invoke 'examples',

header = ->
  divider = "------------"
  console.log divider, dateString()

dateString = ->
  d = new Date
  h = d.getHours()
  m = d.getMinutes()
  s = d.getSeconds()
  meridiem = if h >= 12 then "PM" else "AM"
  h -= 12 if h > 12
  h = 12 if h is 0
  m = "0" + m if m < 10
  s = "0" + s if s < 10

  "#{d.toLocaleDateString()} #{h}:#{m}:#{s} #{meridiem}"    
  